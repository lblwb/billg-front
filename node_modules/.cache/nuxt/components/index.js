export const LoadingBar = () => import('../../../../components/LoadingBar.vue' /* webpackChunkName: "components/loading-bar" */).then(c => wrapFunctional(c.default || c))
export const ModalsModalView = () => import('../../../../components/modals/ModalView.vue' /* webpackChunkName: "components/modals-modal-view" */).then(c => wrapFunctional(c.default || c))
export const PagesBillDashboardDashServiceOrderStatus = () => import('../../../../components/pages/bill/dashboard/DashServiceOrderStatus.vue' /* webpackChunkName: "components/pages-bill-dashboard-dash-service-order-status" */).then(c => wrapFunctional(c.default || c))
export const PagesBillDashboardBonus = () => import('../../../../components/pages/bill/dashboard/DashboardBonus.vue' /* webpackChunkName: "components/pages-bill-dashboard-bonus" */).then(c => wrapFunctional(c.default || c))
export const PagesBillDashboardNews = () => import('../../../../components/pages/bill/dashboard/DashboardNews.vue' /* webpackChunkName: "components/pages-bill-dashboard-news" */).then(c => wrapFunctional(c.default || c))
export const PagesBillDashboardServiceBuyBtn = () => import('../../../../components/pages/bill/dashboard/DashboardServiceBuyBtn.vue' /* webpackChunkName: "components/pages-bill-dashboard-service-buy-btn" */).then(c => wrapFunctional(c.default || c))
export const PagesBillLayoutNavbar = () => import('../../../../components/pages/bill/layout/navbar.vue' /* webpackChunkName: "components/pages-bill-layout-navbar" */).then(c => wrapFunctional(c.default || c))
export const PagesBillServiceTariffsSliderRangeInput = () => import('../../../../components/pages/bill/service/tariffs/SliderRangeInput.vue' /* webpackChunkName: "components/pages-bill-service-tariffs-slider-range-input" */).then(c => wrapFunctional(c.default || c))
export const PagesBillServiceTariffsTextInput = () => import('../../../../components/pages/bill/service/tariffs/TextInput.vue' /* webpackChunkName: "components/pages-bill-service-tariffs-text-input" */).then(c => wrapFunctional(c.default || c))

// nuxt/nuxt.js#8607
function wrapFunctional(options) {
  if (!options || !options.functional) {
    return options
  }

  const propKeys = Array.isArray(options.props) ? options.props : Object.keys(options.props || {})

  return {
    render(h) {
      const attrs = {}
      const props = {}

      for (const key in this.$attrs) {
        if (propKeys.includes(key)) {
          props[key] = this.$attrs[key]
        } else {
          attrs[key] = this.$attrs[key]
        }
      }

      return h(options, {
        on: this.$listeners,
        attrs,
        props,
        scopedSlots: this.$scopedSlots,
      }, this.$slots.default)
    }
  }
}
